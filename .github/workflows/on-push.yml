# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    paths: ['examples/**', 'qse/**', 'pyproject.toml', 'tests/**']

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history so HEAD^ exists

    - name: Check patch version bump on main
      run: |

        # Exit early if there's no previous commit (e.g. first commit)
        if ! git rev-parse HEAD^ >/dev/null 2>&1; then
          echo "No previous commit (HEAD^) found â€” skipping version bump check."
          exit 0
        fi

        # Get version change from diff
        diff=$(git diff HEAD^ HEAD)
        #echo "Git diff output:"
        #echo "$diff"

        old=$(echo "$diff" | grep -Po '(?<=-).*version.*?\K\d+\.\d+\.\d+')
        new=$(echo "$diff" | grep -Po '(?<=\+).*version.*?\K\d+\.\d+\.\d+')

        if [[ -z "$old" || -z "$new" ]]; then
          echo "Error: Version change not found."
          exit 1
        fi

        echo "Old version: $old"
        echo "New version: $new"

        IFS=. read o_major o_minor o_patch <<< "$old"
        IFS=. read n_major n_minor n_patch <<< "$new"

        if [[ "$n_major" -ne "$o_major" ]]; then
          echo "Major version changed. Failing."
          exit 1
        fi

        if [[ "$n_minor" -ne "$o_minor" ]]; then
          echo "Minor version changed. Failing."
          exit 1
        fi

        if [[ "$n_patch" -ne $((o_patch + 1)) ]]; then
          echo "Patch must increment by 1. Failing."
          exit 1
        fi

        echo "Patch version bump verified."


    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install qse and testing dependencies
      run: |
        python -m pip install ".[dev]"
    - name: Lint with flake8
      run: |
        flake8 qse
    - name: Sort imports with isort
      run: |
        isort . --check --diff
    - name: Format code with black
      run: |
        black . --check --diff
    - name: Test with pytest
      run: |
        python -m pytest
